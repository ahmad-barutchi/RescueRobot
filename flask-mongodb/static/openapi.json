{
  "openapi": "3.0.3",
  "info": {
    "title": "Swagger Rescue Robot - OpenAPI 3.0",
    "description": "Rescue Robot Server based on the OpenAPI 3.0 specification.",
    "termsOfService": "http://localhost:5000/terms/",
    "contact": {
      "email": "ahmad_barutchi@gmail.com"
    },
    "version": "1.0"
  },
  "externalDocs": {
    "description": "Find out more about Rescue Robot",
    "url": "http://localhost:5000/terms"
  },
  "servers": [
    {
      "url": "http://localhost:5000/api/v1"
    }
  ],
  "tags": [
    {
      "name": "Accounts",
      "description": "Accounts management",
      "externalDocs": {
        "description": "Login page on ngx-admin",
        "url": "http://localhost:5000/auth/login"
      }
    },
    {
      "name": "sessions",
      "description": "Operations about sessions"
    }
  ],
  "paths": {
    "/register": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Add a new user",
        "description": "Add a new user",
        "operationId": "addUser",
        "requestBody": {
          "description": "Create a new user in the Database",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/registerUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/registerUserResponse"
                }
              }
            }
          },
          "409": {
            "description": "User Already Exist"
          },
          "403": {
            "description": "Please respect regex!"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Login request",
        "description": "",
        "operationId": "updatePetWithForm",
        "requestBody": {
          "description": "Update an existent user in the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/loginUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loginUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Bad Email or Password"
          },
          "403": {
            "description": "Please respect regex!"
          }
        }
      }
    },
    "/password": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Update the password",
        "description": "",
        "operationId": "updatePassword",
        "requestBody": {
          "description": "Update an existent user in the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updatePassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/updatePasswordResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/accounts": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Find all users information",
        "description": "Returns a list of all users",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "description": "List of all users with roles",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/registerUser"
                }
              }
            }
          },
          "422": {
            "description": "Not authorized! Please sign in again and take contact with administration btw."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/mod_user/{email}": {
      "put": {
        "tags": [
          "Accounts"
        ],
        "summary": "Update a user",
        "description": "Update a user",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "Email of user to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of user to update",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "Password of user to update",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "in": "query",
            "description": "Role of user to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "default": "Modified"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/del_user/{email}": {
      "delete": {
        "tags": [
          "Accounts"
        ],
        "summary": "Deletes a user",
        "description": "delete a user",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "Email of user to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete a user response",
            "content": {
              "application/json": {
                "schema": {
                  "default": "Deleted!"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/get_seance/{seance_id}": {
      "get": {
        "tags": [
          "sessions"
        ],
        "summary": "Get session for Ignite-Ui graphic",
        "description": "",
        "parameters": [
          {
            "name": "seance_id",
            "in": "path",
            "description": "The session id to get",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation, return a JSON of temperatures and other information"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/session_info/{seance_id}": {
      "get": {
        "tags": [
          "sessions"
        ],
        "summary": "Get session for table information",
        "description": "",
        "parameters": [
          {
            "name": "seance_id",
            "in": "path",
            "description": "The session id to get",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation, return a JSON of temperatures and other information"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/all_sessions_man": {
      "get": {
        "tags": [
          "sessions"
        ],
        "summary": "Get a list of sessions for management table",
        "description": "",
        "responses": {
          "200": {
            "description": "successful operation, return a JSON of sessions ID and names and other information"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/all_sessions": {
      "get": {
        "tags": [
          "sessions"
        ],
        "summary": "Get a list of all sessions",
        "description": "",
        "responses": {
          "200": {
            "description": "successful operation, return a list of all sessions ID"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/mod_seance/{seance_id}": {
      "put": {
        "tags": [
          "sessions"
        ],
        "summary": "Update a session",
        "description": "Update a session",
        "operationId": "updateSession",
        "parameters": [
          {
            "name": "seance_id",
            "in": "path",
            "description": "Session ID of the session to be update",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "ID of session to update",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "session_name",
            "in": "query",
            "description": "Name of session to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "default": "Modified"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/del_seance/{seance_id}": {
      "delete": {
        "tags": [
          "sessions"
        ],
        "summary": "Deletes a session",
        "description": "delete a session",
        "operationId": "deleteSession",
        "parameters": [
          {
            "name": "seance_id",
            "in": "path",
            "description": "Session id to be delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete a session response",
            "content": {
              "application/json": {
                "schema": {
                  "default": "Deleted!"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "loginUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "aa@a.aa"
          },
          "password": {
            "type": "string",
            "example": "1234"
          }
        }
      },
      "loginUserResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Login Succeeded!"
          },
          "token": {
            "type": "string",
            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTY2MDk0MDMzNywianRpIjoiZTJlMTA5NjQtNTg1ZC00YTU2LThjYmItYWZmMThlOWU5MmQ0IiwidHlwZSI6ImFjY2VzcyIsInN1YiI6eyJlbWFpbCI6InN3YWdnZXJfdGVzdEBzd2FnLnNnciIsInJvbGUiOiJ1c2VyIn0sIm5iZiI6MTY2MDk0MDMzNywiZXhwIjoxNjYwOTcyNzM3fQ.4wI2oMBBoJavUe8YcMjQKNtqFxyf8skLpO-YVto1CKI"
          }
        }
      },
      "registerUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "swagger@swag.sgr"
          },
          "fullName": {
            "type": "string",
            "example": "Swagger User"
          },
          "password": {
            "type": "string",
            "example": "1234"
          }
        }
      },
      "registerUserResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "User added successfully"
          },
          "token": {
            "type": "string",
            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTY2MDk0MDMzNywianRpIjoiZTJlMTA5NjQtNTg1ZC00YTU2LThjYmItYWZmMThlOWU5MmQ0IiwidHlwZSI6ImFjY2VzcyIsInN1YiI6eyJlbWFpbCI6InN3YWdnZXJfdGVzdEBzd2FnLnNnciIsInJvbGUiOiJ1c2VyIn0sIm5iZiI6MTY2MDk0MDMzNywiZXhwIjoxNjYwOTcyNzM3fQ.4wI2oMBBoJavUe8YcMjQKNtqFxyf8skLpO-YVto1CKI"
          }
        }
      },
      "updateUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Modified swagger name"
          },
          "password": {
            "type": "string",
            "example": "1234"
          },
          "role": {
            "type": "string",
            "example": "swagger user"
          }
        }
      },
      "updatePassword": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "example": "1234"
          }
        }
      },
      "updatePasswordResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Password update"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "description": "JWT Authorization header using the Bearer scheme.",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
